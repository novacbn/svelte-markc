/* generated by Svelte v3.16.7 */
import {
	SvelteComponent,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from "svelte/internal";

import { HorizontalRepl } from "svelte-simple-repl";

function create_fragment(ctx) {
	let h1;
	let t3;
	let current;

	const horizontalrepl = new HorizontalRepl({
			props: { value: FRONTMATTER.repl.test_script }
		});

	return {
		c() {
			h1 = element("h1");
			h1.textContent = `Hello, ${thing}!`;
			t3 = space();
			create_component(horizontalrepl.$$.fragment);
		},
		m(target, anchor) {
			insert(target, h1, anchor);
			insert(target, t3, anchor);
			mount_component(horizontalrepl, target, anchor);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(horizontalrepl.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(horizontalrepl.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(h1);
			if (detaching) detach(t3);
			destroy_component(horizontalrepl, detaching);
		}
	};
}

const thing = "world";

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default Component;
export { thing };

/* generated by svelte-markc v0.0.1 */
export const FRONTMATTER = {
    "title": "Test",
    "repl": {
        "test_script": "<script>\n    let count = 0;\n\n    function on_click(event) {\n        event.preventDefault();\n\n        count += 1;\n    }\n\n</script>\n\nPreviously, we counted <b>{count}</b> times!\n<button on:click={on_click}>+1</button>"
    }
};
export const SOURCE = {markdown:"+++\ntitle = \"Test\"\n\n[repl]\n    test_script = \"\"\"<script>\n    let count = 0;\n\n    function on_click(event) {\n        event.preventDefault();\n\n        count += 1;\n    }\n\n</script>\n\nPreviously, we counted <b>{count}</b> times!\n<button on:click={on_click}>+1</button>\"\"\"\n+++\n\n<script context=\"module\">\n    export const thing = \"world\";\n</script>\n\n<script>\n    import {HorizontalRepl} from \"svelte-simple-repl\";\n</script>\n\n# Hello, {thing}!\n\n<HorizontalRepl value={FRONTMATTER.repl.test_script} />\n", html:"<script context=\"module\">\n    export const thing = \"world\";\n</script>\n<script>\n    import {HorizontalRepl} from \"svelte-simple-repl\";\n</script>\n<h1>Hello, {thing}!</h1>\n<HorizontalRepl value=\"{FRONTMATTER.repl.test_script}\"></HorizontalRepl>"};