const PACKAGE_MANIFEST = require("../../package.json");

/**
 * Represents the character that replaces the left curly brace `{` entity code
 */
const CHARACTER_BRACE_LEFT = "{";

/**
 * Represents the character that replaces the right curly brace `}` entity code
 */
const CHARACTER_BRACE_RIGHT = "}";

/**
 * Represents the HTML entity code for a curly left brace "{"
 */
const ENTITY_BRACE_LEFT = "&#123;";

/**
 * Represents the HTML entity code for a curly right brace "}"
 */
const ENTITY_BRACE_RIGHT = "&#125;";

/**
 * Represents a Regular Expression for finding all curly left braces "{"
 */
const EXPRESSION_BRACE_LEFT = /{/g;

/**
 * Represents a Regular Expression for finding all curly right braces "}"
 */
const EXPRESSION_BRACE_RIGHT = /}/g;

/**
 * Represents a Regular Expression for finding all left curly brace `{` entity codes
 */
const EXPRESSION_ENTITY_LEFT = /&#123;/g;

/**
 * Represents a Regular Expression for finding all right curly brace `}` entity codes
 */
const EXPRESSION_ENTITY_RIGHT = /&#125;/g;

/**
 * Represents a Regular Expression for finding a HTML tag name
 */
const EXPRESSION_HTML_TAG = /<([^\s>]+)(\s|>)+/;

/**
 * Returns a Javascript chunk containing JSON-encoded Javascript exports of the given export map
 *
 * e.g.
 *
 * ```javascript
 * const collection = [
 *     {
 *         name: "John Smith",
 *         positions: ["President", "Ex-CIA Agent"]
 *     },
 *
 *     {
 *         name: "James Bond",
 *         positions: ["MI6 Agent", "Rival of John Smith"]
 *     }
 * ];
 *
 * const export_map = new Map();
 * export_map.set("MOVIE_PEOPLE", collection);
 *
 * console.log(format_export_map(export_map));
 *
 * //  logs:
 * //        `/* generated by svelte-markc v${PACKAGE_MANIFEST.version} *\/
 * //         export const MOVIE_PEOPLE = [{"name":"John Smith","positions":["President","Ex-CIA Agent"]},{"name":"James Bond","positions":["MI6 Agent","Rival of John Smith"]}];`
 * ```
 *
 * @param {*} export_map
 * @param {*} format
 */
function format_export_map(export_map, format = "esm") {
    let script = Array.from(export_map);

    if (format === "cjs") {
        script = script.map(([key, value], index) => {
            return `exports.${key} = ${JSON.stringify(value)};`;
        });
    } else if (format === "esm") {
        script = script.map(([key, value], index) => {
            return `export const ${key} = ${JSON.stringify(value)};`;
        });
    } else {
        throw new Exception(`bad dispatch to 'format_export_map' (format '${format}' not valid)`);
    }

    return `/* generated by svelte-markc v${PACKAGE_MANIFEST.version} */\n` + script.join("\n");
}

/**
 * Returns the first tag name found, in the given `text`
 * @param {*} text
 */
function get_tagname(text) {
    // source: https://stackoverflow.com/a/46064683
    return text.match(EXPRESSION_HTML_TAG)[1];
}

/**
 * Replaces curly braces "{" / "}" with their HTML entity code counterparts
 * @param {*} str
 */
function replace_brace_characters(str) {
    return str
        .replace(EXPRESSION_BRACE_LEFT, ENTITY_BRACE_LEFT)
        .replace(EXPRESSION_BRACE_RIGHT, ENTITY_BRACE_RIGHT);
}

/**
 * Replaces curly braces entity codes "&#123;" / "&#125;" with their character counterparts
 * @param {*} str
 */
function replace_brace_entities(str) {
    return str
        .replace(EXPRESSION_ENTITY_LEFT, CHARACTER_BRACE_LEFT)
        .replace(EXPRESSION_ENTITY_RIGHT, CHARACTER_BRACE_RIGHT);
}

module.exports = {
    format_export_map,
    get_tagname,
    replace_brace_characters,
    replace_brace_entities
};
