const _ = require("lodash");
const {compile} = require("svelte/compiler");

const PACKAGE_MANIFEST = require("../../package.json");

/**
 * Represents the types of compiled output formats supported by Svelte
 */
const SVELTE_FORMAT_TYPES = {
    /**
     * Represents formatting the compiled output as a CommonJS module, e.g. `require` / `module.exports`
     */
    cjs: "cjs",

    /**
     * Represents formatting the compiled output as a ECMAScript module, e.g. `import` / `export`
     */
    esm: "esm"
};

/**
 * Returns the compiled Svelte Component, with the `svelte-mark` exports
 * @param {*} text
 * @param {*} options
 * @param {*} frontmatter
 * @param {*} source
 */
function format_output(text, options, frontmatter, source) {
    if (options.format === SVELTE_FORMAT_TYPES.esm)
        return `${text}

/* generated by svelte-markc v${PACKAGE_MANIFEST.version} */
const FRONTMATTER = ${JSON.stringify(frontmatter, null, 4)};
const SOURCE = ${JSON.stringify(source)};
export FRONTMATTER;
export SOURCE;`;

    return `${text}

/* generated by svelte-markc v${PACKAGE_MANIFEST.version} */
const FRONTMATTER = ${JSON.stringify(frontmatter, null, 4)};
const SOURCE = ${JSON.stringify(source)};
exports.FRONTMATTER = FRONTMATTER;
exports.SOURCE = SOURCE;`;
}

/**
 * Returns the standardized options for configuring `svelte/compiler`
 * @param {*} options
 */
function get_svelte_options(options = {}) {
    return _.merge(
        {
            format: SVELTE_FORMAT_TYPES.cjs
        },
        options
    );
}

/**
 * Returns the compiled Svelte Component source
 * @param {*} source
 * @param {*} original_source
 * @param {*} frontmatter
 * @param {*} options
 */
function compile_svelte(source, original_source = null, frontmatter = {}, options = {}) {
    options = get_svelte_options(options);
    original_source = original_source ? original_source : source;

    const results = compile(source, options);

    return {
        ...results,

        js: {
            code: format_output(results.js.code, options, frontmatter, original_source),
            map: results.js.map
        }
    };
}

module.exports = {
    compile_svelte
};
